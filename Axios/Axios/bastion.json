{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.1",
  "parameters": {
    "coreDeviceId": {
      "type": "string",
      "metadata": {
        "description": "The CORE Device Number associated with this subscription"
      }
    },
    "bastionId": {
      "type": "string",
      "metadata": {
        "description": "The Bastion Identifier (in case they have more than 1)"
      },
      "defaultValue": "1"
    },
    "vmSize": {
      "type": "string",
      "allowedValues": [
        "Standard_A0",
        "Standard_A2_v2",
        "Standard_D1_v2"
      ],
      "metadata": {
        "description": "The size of the VM Created"
      },
      "defaultValue": "Standard_D1_v2"
    },
    "vnetRG": {
      "type": "string",
      "defaultValue": "LOC-RSG-ALL-ENV",
      "minLength": 1,
      "metadata": {
        "description": "The name of the Resource Group where we can find the VNET"
      }
    },
    "vnetName": {
      "type": "string",
      "defaultValue": "LOC-VNET01",
      "minLength": 1,
      "metadata": {
        "description": "Name of an existing VNet located in the vnetRG specified above."
      }
    },
    "subnetName": {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Name of the Bastion Subnet inside of the provided VNET"
      },
      "defaultValue": "LOC-VNET01-RBAST01"
    },
    "operatingSystem": {
      "type": "string",
      "allowedValues": [
        "Windows",
        "Linux"
      ],
      "metadata": {
        "description": "Flavor of the Bastion Server to deploy."
      }
    },
    "environment": {
      "type": "string",
      "allowedValues": [
        "Bastion"
      ],
      "metadata": {
        "description": "The Environment type we are building"
      },
      "defaultValue": "Bastion"
    },
    "buildDate": {
      "type": "string",
      "metadata": {
        "description": "The date of this build"
      },
      "defaultValue": "01/01/2016"
    },
    "buildBy": {
      "type": "string",
      "metadata": {
        "description": "The name address of the engineer who built this environment"
      },
      "defaultValue": "First Last"
    },
    "bastionScope": {
      "type": "string",
      "metadata": {
        "description": "The scope of network reach for this Bastion"
      },
      "allowedValues": [
        "global",
        "region",
        "vnet"
      ],
      "defaultValue": "vnet"
    },
    "assetLocation": {
      "type": "string",
      "metadata": {
        "description": "The asset Location"
      },
      "defaultValue": "https://raxtemplates.blob.core.windows.net/master/"
    },
    "sasToken": {
      "type": "securestring",
      "metadata": {
        "description": "The sas token required to access the asset",
        "group": "Deployment Settings",
        "order": 2,
        "label": "SAS Token for Asset location",
        "question": "Enter the sas token to securely access the referenced asset location",
        "skip": "never"
      },
      "defaultValue": "?sv=2015-12-11&si=policy-name&sr=c&sig=sometoken"
    }
  },
  "variables": {
    "storageTemplateURL": "[concat(parameters('assetLocation'),'storage/storageaccount.json')]",
    "nicTemplateURL": "[concat(parameters('assetLocation'),'resources/partials/partial-nic-nolb-publicip.json')]",
    "osHash": {
      "Windows": {
        "imagePublisher": "MicrosoftWindowsServer",
        "imageOffer": "WindowsServer",
        "imageSKU": "2016-Datacenter",
        "version": "latest",
        "bginfoTemplateURL": "[concat(parameters('assetLocation'),'resources/extensions/bginfo-ON.json')]",
        "enableDiagnostics": "[concat(parameters('assetLocation'),'resources/extensions/diagnosticsWindows.json')]",
        "AntiMalwareTemplateURL": "[concat(parameters('assetLocation'),'resources/extensions/antimalware-ON.json')]",
        "BastionADC": "[concat(parameters('assetLocation'),'resources/extensions/dsc-windows-adc.json')]",
        "VMNamePrefix": "[concat('rwb',parameters('bastionId'),'-')]"
      },
      "Linux": {
        "imagePublisher": "OpenLogic",
        "imageOffer": "CentOS",
        "imageSKU": "7.2",
        "version": "latest",
        "bginfoTemplateURL": "[concat(parameters('assetLocation'),'resources/extensions/bginfo-OFF.json')]",
        "enableDiagnostics": "[concat(parameters('assetLocation'),'resources/extensions/diagnosticsLinux-OFF.json')]",
        "AntiMalwareTemplateURL": "[concat(parameters('assetLocation'),'resources/extensions/antimalware-OFF.json')]",
        "BastionADC": "[concat(parameters('assetLocation'),'resources/extensions/dsc-windows-OFF.json')]",
        "VMNamePrefix": "[concat('rlb',parameters('bastionId'),'-')]"
      }
    },
    "storageAccountType": "Standard_LRS",
    "virtualNetworkId": "[resourceId(parameters('vnetRG'), 'Microsoft.Network/virtualnetworks', parameters('vnetName'))]",
    "subnetRef": "[concat(variables('virtualNetworkId'), '/subnets/', parameters('subnetName'))]",
    "VMName": "[concat(variables('osHash')[parameters('operatingSystem')].VMNamePrefix, parameters('coreDeviceId'))]",
    "imagePublisher": "[variables('osHash')[parameters('operatingSystem')].imagePublisher]",
    "imageOffer": "[variables('osHash')[parameters('operatingSystem')].imageOffer]",
    "imageSKU": "[variables('osHash')[parameters('operatingSystem')].imageSKU]",
    "imageVersion": "[variables('osHash')[parameters('operatingSystem')].version]",
    "dnsNameForPublicIP": "[variables('VMName')]",
    "dataDiskSize": 1023,
    "storageSuffix": "[toLower(replace(variables('vmName'),'-',''))]",
    "adminUsername": "[concat(variables('VMName'), '-rack')]",
    "adminPassword": "[concat('R4x',uniqueString(concat(resourceGroup().id, variables('VMName'))))]",
    "ConfigData": "[concat(parameters('assetLocation'),'resources/scripts/ConfigDataWindows.psd1')]"
  },
  "resources": [
    {
      "name": "[concat('DiagnosticStorageAccount-',variables('vmName'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('storageTemplateURL'),parameters('sasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageAccountType": {
            "value": "Standard_LRS"
          },
          "storageAccountCount": {
            "value": 1
          },
          "storageAccountSuffix": {
            "value": "diagnostics"
          },
          "environment": {
            "value": "[parameters('environment')]"
          },
          "buildBy": {
            "value": "[parameters('buildBy')]"
          },
          "buildDate": {
            "value": "[parameters('buildDate')]"
          }
        }
      }
    },
    {
      "name": "[concat('StorageAccount-',variables('vmName'))]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('storageTemplateURL'),parameters('sasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "storageAccountType": {
            "value": "[variables('storageAccountType')]"
          },
          "storageAccountCount": {
            "value": 1
          },
          "storageAccountSuffix": {
            "value": "[variables('storageSuffix')]"
          },
          "environment": {
            "value": "[parameters('environment')]"
          },
          "buildBy": {
            "value": "[parameters('buildBy')]"
          },
          "buildDate": {
            "value": "[parameters('buildDate')]"
          }
        }
      }
    },
    {
      "name": "[concat(variables('vmName'), '-Nic')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('nicTemplateURL'),parameters('sasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "availabilitySetName": {
            "value": "NONE"
          },
          "vmName": {
            "value": "[variables('vmName')]"
          },
          "subnetRef": {
            "value": "[variables('subnetRef')]"
          },
          "dnsNameforPublicIP": {
            "value": "[variables('dnsNameForPublicIP')]"
          },
          "environment": {
            "value": "[parameters('environment')]"
          },
          "buildBy": {
            "value": "[parameters('buildBy')]"
          },
          "buildDate": {
            "value": "[parameters('buildDate')]"
          }
        }
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmName')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('DiagnosticStorageAccount-',variables('vmName'))]",
        "[concat('StorageAccount-',variables('vmName'))]",
        "[concat(variables('vmName'), '-Nic')]"
      ],
      "tags": {
        "DisplayName": "VirtualMachine",
        "Environment": "[parameters('environment')]",
        "BuildDate": "[parameters('buildDate')]",
        "BuildBy": "[parameters('buildBy')]",
        "BastionScope": "[parameters('bastionScope')]",
        "BastionType": "Legacy"
      },
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('VMName')]",
          "adminUsername": "[variables('adminUsername')]",
          "adminPassword": "[variables('adminPassword')]"
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": true,
            "storageUri": "[concat('http://', reference(concat('DiagnosticStorageAccount-',variables('vmName'))).outputs.storageAccounts.value[0], '.blob.core.windows.net')]"
          }
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[variables('imageSKU')]",
            "version": "[variables('imageVersion')]"
          },
          "osDisk": {
            "name": "[concat(variables('vmName'),'-OS')]",
            "vhd": {
              "uri": "[concat('http://', reference(concat('StorageAccount-',variables('vmName'))).outputs.storageAccounts.value[0], '.blob.core.windows.net/vhds/', variables('vmName'),'-os.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "lun": 0,
              "name": "[concat(variables('vmName'),'-data1')]",
              "createOption": "Empty",
              "vhd": {
                "uri": "[concat('http://', reference(concat('StorageAccount-',variables('vmName'))).outputs.storageAccounts.value[0], '.blob.core.windows.net/vhds/', variables('vmName'),'-data1.vhd')]"
              },
              "caching": "None",
              "diskSizeGB": 127
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "id": "[resourceId('Microsoft.Network/networkInterfaces', concat(variables('vmName'), '-nic' ))]"
            }
          ]
        }
      }
    },
    {
      "name": "[concat(variables('vmName'),  '-BGInfo')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('vmName')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('osHash')[parameters('operatingSystem')].bginfoTemplateURL,parameters('sasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[variables('vmName')]"
          }
        }
      }
    },
    {
      "name": "[concat(variables('vmName'),  '-Diagnostics')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[concat(variables('vmName'),  '-BGInfo')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('OSHash')[parameters('operatingSystem')].enableDiagnostics,parameters('sasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[variables('vmName')]"
          },
          "vmDiagnosticsStorageAccountName": {
            "value": "[reference(concat('DiagnosticStorageAccount-',variables('vmName'))).outputs.storageAccounts.value[0]]"
          }
        }
      }
    },
    {
      "name": "[concat(variables('vmName'),  '-AntiMalware')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[concat(variables('vmName'),  '-Diagnostics')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('OSHash')[parameters('operatingSystem')].AntiMalwareTemplateURL,parameters('sasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[variables('vmName')]"
          }
        }
      }
    },
    {
      "name": "[concat(variables('vmName'),  '-BastionADC')]",
      "type": "Microsoft.Resources/deployments",
      "apiVersion": "2015-01-01",
      "dependsOn": [
        "[variables('vmName')]",
        "[concat(variables('vmName'),  '-Diagnostics')]",
        "[concat(variables('vmName'),  '-AntiMalware')]"
      ],
      "properties": {
        "mode": "Incremental",
        "templateLink": {
          "uri": "[concat(variables('OSHash')[parameters('operatingSystem')].BastionADC,parameters('sasToken'))]",
          "contentVersion": "1.0.0.0"
        },
        "parameters": {
          "vmName": {
            "value": "[variables('vmName')]"
          },
          "adminUsername": {
            "value": "[variables('adminusername')]"
          },
          "adminPassword": {
            "value": "[variables('adminPassword')]"
          },
          "configData": {
            "value": "[variables('ConfigData')]"
          },
          "applyOSPatches": {
            "value": "Yes"
          },
          "timeZone": {
            "value": "UTC"
          },
          "sasToken": {
            "value": "[parameters('sasToken')]"
          },
          "assetLocation": {
            "value": "[concat(parameters('assetLocation'))]"
          }
        }
      }
    }
  ],
  "outputs": {
    "vmName": {
      "type": "string",
      "value": "[variables('vmName')]"
    },
    "adminUsername": {
      "type": "string",
      "value": "[variables('adminUsername')]"
    },
    "publicDNS": {
      "type": "string",
      "value": "[reference(concat(variables('vmName'),'-nic' )).outputs.publicDNS.value ]"
    },
    "publicIpAddress": {
      "type": "string",
      "value": "[reference(concat(variables('vmName'),'-nic' )).outputs.publicIpAddress.value ]"
    }
  }
}